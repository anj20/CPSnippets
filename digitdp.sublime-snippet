<snippet>
	<content><![CDATA[
ll dp[64][1000][2];
 
// Stores the digits in x in a vector digit
void getDigits(ll x,vi &digit)
{
    while (x)
    {
        digit.push_back(x%10);
        x /= 10;
    }
}
 
// Return sum of digits from 1 to integer in
// digit vector
ll digitSum(int idx, int sum, int tight,vi &digit)
{
    // base case
    if (idx == -1)
       return sum;
 
    // checking if already calculated this state
    if (dp[idx][sum][tight] != -1 and tight != 1)
        return dp[idx][sum][tight];
 
    ll ret = 0;
 
    // calculating range value
    int k = (tight)? digit[idx] : 9;
 
    for (int i = 0; i <= k ; i++)
    {
        // calculating newTight value for next state
        int newTight = (digit[idx] == i? tight : 0);
 
        // fetching answer from next state
        ret += digitSum(idx-1, sum+i, newTight, digit);
    }
 
    if (!tight)
      dp[idx][sum][tight] = ret;
 
    return ret;
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>digitDp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
